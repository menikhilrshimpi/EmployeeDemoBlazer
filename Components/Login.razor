@page "/login"

@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<div class="login-container">
    <div class="login-box">
        <h3 class="login-title">Login</h3>

        <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="loginModel.Username" class="form-control" />
                <ValidationMessage For="@(() => loginModel.Username)" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <button type="submit" class="btn btn-primary login-button">LOGIN</button>
        </EditForm>

        <div class="login-links">            
            <a href="/register" class="create-account-link">Create your Account →</a>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = null;

        var user = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
        if (user != null)
        {
            if (AuthenticationStateProvider is CustomAuthStateProvider customAuthStateProvider)
            {
                await customAuthStateProvider.MarkUserAsAuthenticated(user);
            }
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid username or password";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}