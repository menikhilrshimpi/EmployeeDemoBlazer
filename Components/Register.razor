@page "/register"
@using EmployeeManagementSystem.Data.Model
@using EmployeeManagementSystem.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="registerModel.Username" class="form-control" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" @bind-Value="registerModel.Password" class="form-control" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = null;

        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            errorMessage = "Passwords do not match";
            return;
        }

        var users = await AuthService.GetUsersAsync();
        if (users.Any(u => u.Username == registerModel.Username))
        {
            errorMessage = "Username already exists";
            return;
        }

        var newUser = new User
            {
                Username = registerModel.Username,
                Password = registerModel.Password,
                Role = "Employee" // Default role
            };

        await AuthService.RegisterAsync(newUser);
        NavigationManager.NavigateTo("/login");
    }

    public class RegisterModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
        public string ConfirmPassword { get; set; }
    }
}